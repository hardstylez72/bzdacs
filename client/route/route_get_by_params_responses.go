// Code generated by go-swagger; DO NOT EDIT.

package route

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hardstylez72/bzdacs/models"
)

// RouteGetByParamsReader is a Reader for the RouteGetByParams structure.
type RouteGetByParamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RouteGetByParamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRouteGetByParamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRouteGetByParamsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRouteGetByParamsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRouteGetByParamsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRouteGetByParamsOK creates a RouteGetByParamsOK with default headers values
func NewRouteGetByParamsOK() *RouteGetByParamsOK {
	return &RouteGetByParamsOK{}
}

/* RouteGetByParamsOK describes a response with status code 200, with default header values.

OK
*/
type RouteGetByParamsOK struct {
	Payload *models.RouteGetResponse
}

func (o *RouteGetByParamsOK) Error() string {
	return fmt.Sprintf("[POST /v1/route/getByParams][%d] routeGetByParamsOK  %+v", 200, o.Payload)
}
func (o *RouteGetByParamsOK) GetPayload() *models.RouteGetResponse {
	return o.Payload
}

func (o *RouteGetByParamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RouteGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRouteGetByParamsBadRequest creates a RouteGetByParamsBadRequest with default headers values
func NewRouteGetByParamsBadRequest() *RouteGetByParamsBadRequest {
	return &RouteGetByParamsBadRequest{}
}

/* RouteGetByParamsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RouteGetByParamsBadRequest struct {
	Payload *models.UtilResponseWithError
}

func (o *RouteGetByParamsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/route/getByParams][%d] routeGetByParamsBadRequest  %+v", 400, o.Payload)
}
func (o *RouteGetByParamsBadRequest) GetPayload() *models.UtilResponseWithError {
	return o.Payload
}

func (o *RouteGetByParamsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilResponseWithError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRouteGetByParamsNotFound creates a RouteGetByParamsNotFound with default headers values
func NewRouteGetByParamsNotFound() *RouteGetByParamsNotFound {
	return &RouteGetByParamsNotFound{}
}

/* RouteGetByParamsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RouteGetByParamsNotFound struct {
	Payload *models.UtilResponseWithError
}

func (o *RouteGetByParamsNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/route/getByParams][%d] routeGetByParamsNotFound  %+v", 404, o.Payload)
}
func (o *RouteGetByParamsNotFound) GetPayload() *models.UtilResponseWithError {
	return o.Payload
}

func (o *RouteGetByParamsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilResponseWithError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRouteGetByParamsInternalServerError creates a RouteGetByParamsInternalServerError with default headers values
func NewRouteGetByParamsInternalServerError() *RouteGetByParamsInternalServerError {
	return &RouteGetByParamsInternalServerError{}
}

/* RouteGetByParamsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type RouteGetByParamsInternalServerError struct {
	Payload *models.UtilResponseWithError
}

func (o *RouteGetByParamsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/route/getByParams][%d] routeGetByParamsInternalServerError  %+v", 500, o.Payload)
}
func (o *RouteGetByParamsInternalServerError) GetPayload() *models.UtilResponseWithError {
	return o.Payload
}

func (o *RouteGetByParamsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilResponseWithError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
