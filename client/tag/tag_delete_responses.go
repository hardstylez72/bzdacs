// Code generated by go-swagger; DO NOT EDIT.

package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hardstylez72/bzdacs/models"
)

// TagDeleteReader is a Reader for the TagDelete structure.
type TagDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TagDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTagDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTagDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTagDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewTagDeleteOK creates a TagDeleteOK with default headers values
func NewTagDeleteOK() *TagDeleteOK {
	return &TagDeleteOK{}
}

/* TagDeleteOK describes a response with status code 200, with default header values.

TagDeleteOK tag delete o k
*/
type TagDeleteOK struct {
}

func (o *TagDeleteOK) Error() string {
	return fmt.Sprintf("[POST /v1/tag/delete][%d] tagDeleteOK ", 200)
}

func (o *TagDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTagDeleteBadRequest creates a TagDeleteBadRequest with default headers values
func NewTagDeleteBadRequest() *TagDeleteBadRequest {
	return &TagDeleteBadRequest{}
}

/* TagDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type TagDeleteBadRequest struct {
	Payload *models.UtilResponseWithError
}

func (o *TagDeleteBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/tag/delete][%d] tagDeleteBadRequest  %+v", 400, o.Payload)
}
func (o *TagDeleteBadRequest) GetPayload() *models.UtilResponseWithError {
	return o.Payload
}

func (o *TagDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilResponseWithError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTagDeleteInternalServerError creates a TagDeleteInternalServerError with default headers values
func NewTagDeleteInternalServerError() *TagDeleteInternalServerError {
	return &TagDeleteInternalServerError{}
}

/* TagDeleteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type TagDeleteInternalServerError struct {
	Payload *models.UtilResponseWithError
}

func (o *TagDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/tag/delete][%d] tagDeleteInternalServerError  %+v", 500, o.Payload)
}
func (o *TagDeleteInternalServerError) GetPayload() *models.UtilResponseWithError {
	return o.Payload
}

func (o *TagDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilResponseWithError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
