basePath: /api
definitions:
  namespace.deleteRequest:
    properties:
      namespaceId:
        type: integer
    required:
    - namespaceId
    type: object
  namespace.getRequest:
    properties:
      id:
        type: integer
      name:
        type: string
      systemId:
        type: integer
    type: object
  namespace.getResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      id:
        type: integer
      name:
        type: string
      systemId:
        type: integer
      updatedAt:
        type: string
    type: object
  namespace.insertRequest:
    properties:
      name:
        type: string
      systemId:
        type: integer
    required:
    - name
    - systemId
    type: object
  namespace.listRequest:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  namespace.updateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  route.deleteRequest:
    properties:
      id:
        type: integer
      namespaceId:
        type: integer
    required:
    - id
    - namespaceId
    type: object
  route.filter:
    properties:
      namespaceId:
        type: integer
      page:
        type: integer
      pageSize:
        type: integer
    required:
    - namespaceId
    - page
    - pageSize
    type: object
  route.getByIdRequest:
    properties:
      id:
        type: integer
      namespaceId:
        type: integer
    required:
    - id
    - namespaceId
    type: object
  route.getByParamsRequest:
    properties:
      method:
        type: string
      namespaceId:
        type: integer
      route:
        type: string
    required:
    - method
    - namespaceId
    - route
    type: object
  route.getResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      description:
        type: string
      id:
        type: integer
      method:
        type: string
      namespaceId:
        type: integer
      route:
        type: string
      tags:
        items:
          type: string
        type: array
      updatedAt:
        type: string
    type: object
  route.insertRequest:
    properties:
      description:
        type: string
      method:
        type: string
      namespaceId:
        type: integer
      route:
        type: string
      tags:
        items:
          type: string
        type: array
    required:
    - description
    - method
    - namespaceId
    - route
    type: object
  route.listRequest:
    properties:
      filter:
        $ref: '#/definitions/route.filter'
    type: object
  route.listResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/route.getResponse'
        type: array
      total:
        type: integer
    type: object
  route.updateRequest:
    properties:
      description:
        type: string
      id:
        type: integer
      method:
        type: string
      namespaceId:
        type: integer
      route:
        type: string
      tags:
        items:
          type: string
        type: array
    required:
    - description
    - id
    - method
    - namespaceId
    - route
    type: object
  system.deleteRequest:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  system.getRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  system.getResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  system.insertRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  system.updateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  tag.deleteRequest:
    properties:
      id:
        type: integer
      namespaceId:
        type: integer
    required:
    - id
    - namespaceId
    type: object
  tag.filter:
    properties:
      namespaceId:
        type: integer
      page:
        type: integer
      pageSize:
        type: integer
      pattern:
        type: string
    required:
    - namespaceId
    - page
    - pageSize
    type: object
  tag.getRequest:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  tag.getResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      id:
        type: integer
      name:
        type: string
      namespaceId:
        type: integer
      updatedAt:
        type: string
    type: object
  tag.insertRequest:
    properties:
      name:
        type: string
      namespaceId:
        type: integer
    required:
    - name
    - namespaceId
    type: object
  tag.listRequest:
    properties:
      filter:
        $ref: '#/definitions/tag.filter'
    type: object
  tag.listResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/tag.getResponse'
        type: array
      total:
        type: integer
    type: object
  tag.updateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
      namespaceId:
        type: integer
    required:
    - id
    - name
    - namespaceId
    type: object
  util.Error:
    properties:
      code:
        type: string
      message:
        type: string
      stack:
        type: string
    type: object
  util.ResponseWithError:
    properties:
      error:
        $ref: '#/definitions/util.Error'
    type: object
host: localhost:8081
info:
  contact:
    name: Sergey Korotkov
  description: Access control system
  title: BZDACS
  version: "1.0"
paths:
  /v1/namespace/create:
    post:
      consumes:
      - application/json
      description: Creates namespace
      operationId: namespace.create
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/namespace.insertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/namespace.getResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - namespace
  /v1/namespace/delete:
    post:
      consumes:
      - application/json
      description: Deletes selected namespace
      operationId: namespace.delete
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/namespace.deleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - namespace
  /v1/namespace/get:
    post:
      consumes:
      - application/json
      description: Gets namespace with specified params
      operationId: namespace.get
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/namespace.getRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/namespace.getResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - namespace
  /v1/namespace/list:
    post:
      consumes:
      - application/json
      description: List of namespaces belong to selected system
      operationId: namespace.list
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/namespace.listRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/namespace.getResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - namespace
  /v1/namespace/update:
    post:
      consumes:
      - application/json
      description: Updates namespace
      operationId: namespace.update
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/namespace.updateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/namespace.getResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - namespace
  /v1/route/create:
    post:
      consumes:
      - application/json
      description: Creates route
      operationId: route.create
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/route.insertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.getResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - route
  /v1/route/delete:
    post:
      consumes:
      - application/json
      description: Deletes route
      operationId: route.delete
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/route.deleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - route
  /v1/route/getById:
    post:
      consumes:
      - application/json
      description: Gets route by id
      operationId: route.getById
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/route.getByIdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.getResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - route
  /v1/route/getByParams:
    post:
      consumes:
      - application/json
      description: Gets route by params
      operationId: route.getByParams
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/route.getByParamsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.getResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - route
  /v1/route/list:
    post:
      consumes:
      - application/json
      description: Gets list of routes
      operationId: route.list
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/route.listRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.listResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - route
  /v1/route/update:
    post:
      consumes:
      - application/json
      description: Updates route
      operationId: route.update
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/route.updateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.getResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - route
  /v1/system/create:
    post:
      consumes:
      - application/json
      description: Creates system
      operationId: system.create
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/system.insertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.getResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - system
  /v1/system/delete:
    post:
      consumes:
      - application/json
      description: Deletes system by id
      operationId: system.delete
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/system.deleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - system
  /v1/system/get:
    post:
      consumes:
      - application/json
      description: Gets system by multiple params
      operationId: system.get
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/system.getRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.getResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - system
  /v1/system/list:
    post:
      consumes:
      - application/json
      description: Gets system list
      operationId: system.list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/system.getResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - system
  /v1/system/update:
    post:
      consumes:
      - application/json
      description: Updates system
      operationId: system.update
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/system.updateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.getResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - system
  /v1/tag/create:
    post:
      consumes:
      - application/json
      description: Creates tag
      operationId: tag.create
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/tag.insertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tag.getResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - tag
  /v1/tag/delete:
    post:
      consumes:
      - application/json
      description: Deletes tag
      operationId: tag.delete
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/tag.deleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - tag
  /v1/tag/get:
    post:
      consumes:
      - application/json
      description: Gets tag
      operationId: tag.get
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/tag.getRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tag.getResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - tag
  /v1/tag/list:
    post:
      consumes:
      - application/json
      description: List tags
      operationId: tag.list
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/tag.listRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tag.listResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - tag
  /v1/tag/update:
    post:
      consumes:
      - application/json
      description: Updates tag
      operationId: tag.update
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/tag.updateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tag.getResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - tag
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
