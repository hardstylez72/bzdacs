// Code generated by go-swagger; DO NOT EDIT.

package user_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hardstylez72/bzdacs/generated/models"
)

// UserGroupCreateReader is a Reader for the UserGroupCreate structure.
type UserGroupCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserGroupCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserGroupCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUserGroupCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUserGroupCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUserGroupCreateOK creates a UserGroupCreateOK with default headers values
func NewUserGroupCreateOK() *UserGroupCreateOK {
	return &UserGroupCreateOK{}
}

/* UserGroupCreateOK describes a response with status code 200, with default header values.

OK
*/
type UserGroupCreateOK struct {
	Payload []*models.UsergroupGroup
}

func (o *UserGroupCreateOK) Error() string {
	return fmt.Sprintf("[POST /v1/user/group/create][%d] userGroupCreateOK  %+v", 200, o.Payload)
}
func (o *UserGroupCreateOK) GetPayload() []*models.UsergroupGroup {
	return o.Payload
}

func (o *UserGroupCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupCreateBadRequest creates a UserGroupCreateBadRequest with default headers values
func NewUserGroupCreateBadRequest() *UserGroupCreateBadRequest {
	return &UserGroupCreateBadRequest{}
}

/* UserGroupCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UserGroupCreateBadRequest struct {
	Payload *models.UtilResponseWithError
}

func (o *UserGroupCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/user/group/create][%d] userGroupCreateBadRequest  %+v", 400, o.Payload)
}
func (o *UserGroupCreateBadRequest) GetPayload() *models.UtilResponseWithError {
	return o.Payload
}

func (o *UserGroupCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilResponseWithError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupCreateInternalServerError creates a UserGroupCreateInternalServerError with default headers values
func NewUserGroupCreateInternalServerError() *UserGroupCreateInternalServerError {
	return &UserGroupCreateInternalServerError{}
}

/* UserGroupCreateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UserGroupCreateInternalServerError struct {
	Payload *models.UtilResponseWithError
}

func (o *UserGroupCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/user/group/create][%d] userGroupCreateInternalServerError  %+v", 500, o.Payload)
}
func (o *UserGroupCreateInternalServerError) GetPayload() *models.UtilResponseWithError {
	return o.Payload
}

func (o *UserGroupCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilResponseWithError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
