// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package generated

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Sergey Korotkov"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/group/create": {
            "post": {
                "description": "Creates group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "operationId": "group.create",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupInsertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/group/delete": {
            "post": {
                "description": "Deletes group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "operationId": "group.delete",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/group/getByCode": {
            "post": {
                "description": "Gets group by code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "operationId": "group.getByCode",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupGetByCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/group/getById": {
            "post": {
                "description": "Gets group by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "operationId": "group.getById",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupGetByIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/group/list": {
            "post": {
                "description": "List groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "operationId": "group.list",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/group/route/create": {
            "post": {
                "description": "Creates group-routes relations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group-route"
                ],
                "operationId": "group-routes.create",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupRouteInsertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/groupRouteRoute"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/group/route/delete": {
            "post": {
                "description": "Deletes group-routes relations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group-route"
                ],
                "operationId": "group-routes.delete",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupRouteDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/group/route/list": {
            "post": {
                "description": "Gets list of group-routes relations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group-route"
                ],
                "operationId": "group-routes.list",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupRouteListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupRouteListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/group/update": {
            "post": {
                "description": "Updates group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "operationId": "group.update",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/namespace/create": {
            "post": {
                "description": "Creates namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespace"
                ],
                "operationId": "namespace.create",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/namespaceInsertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/namespaceGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/namespace/delete": {
            "post": {
                "description": "Deletes selected namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespace"
                ],
                "operationId": "namespace.delete",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/namespaceDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/namespace/get": {
            "post": {
                "description": "Gets namespace with specified params",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespace"
                ],
                "operationId": "namespace.get",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/namespaceGetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/namespaceGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/namespace/list": {
            "post": {
                "description": "List of namespaces belong to selected system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespace"
                ],
                "operationId": "namespace.list",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/namespaceListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/namespaceGetResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/namespace/update": {
            "post": {
                "description": "Updates namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespace"
                ],
                "operationId": "namespace.update",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/namespaceUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/namespaceGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/route/create": {
            "post": {
                "description": "Creates route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "route"
                ],
                "operationId": "route.create",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routeInsertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routeGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/route/delete": {
            "post": {
                "description": "Deletes route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "route"
                ],
                "operationId": "route.delete",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routeDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/route/getById": {
            "post": {
                "description": "Gets route by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "route"
                ],
                "operationId": "route.getById",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routeGetByIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routeGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/route/getByParams": {
            "post": {
                "description": "Gets route by params",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "route"
                ],
                "operationId": "route.getByParams",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routeGetByParamsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routeGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/route/list": {
            "post": {
                "description": "Gets list of routes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "route"
                ],
                "operationId": "route.list",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routeListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routeListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/route/update": {
            "post": {
                "description": "Updates route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "route"
                ],
                "operationId": "route.update",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routeUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routeGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/sys-user/login": {
            "post": {
                "description": "Login sys-user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys-user"
                ],
                "operationId": "sys-user.login",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sysUserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/sys-user/logout": {
            "post": {
                "description": "Logout sys-user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys-user"
                ],
                "operationId": "sys-user.logout",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/sys-user/register": {
            "post": {
                "description": "Creates sys-user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys-user"
                ],
                "operationId": "sys-user.register",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sysUserRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/sys-user/session": {
            "post": {
                "description": "Gets sys-user session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sys-user"
                ],
                "operationId": "sys-user.session",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.sessionResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/system/create": {
            "post": {
                "description": "Creates system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "operationId": "system.create",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/systemInsertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/systemGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/system/delete": {
            "post": {
                "description": "Deletes system by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "operationId": "system.delete",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/systemDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/system/get": {
            "post": {
                "description": "Gets system by multiple params",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "operationId": "system.get",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/systemGetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/systemGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/system/list": {
            "post": {
                "description": "Gets system list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "operationId": "system.list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/systemGetResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/system/update": {
            "post": {
                "description": "Updates system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "operationId": "system.update",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/systemUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/systemGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/tag/create": {
            "post": {
                "description": "Creates tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "operationId": "tag.create",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tagInsertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tagGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/tag/delete": {
            "post": {
                "description": "Deletes tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "operationId": "tag.delete",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tagDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/tag/get": {
            "post": {
                "description": "Gets tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "operationId": "tag.get",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tagGetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tagGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/tag/list": {
            "post": {
                "description": "List tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "operationId": "tag.list",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tagListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tagListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/tag/update": {
            "post": {
                "description": "Updates tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "operationId": "tag.update",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tagUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tagGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/user/create": {
            "post": {
                "description": "Creates user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "user.create",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/user/delete": {
            "post": {
                "description": "Deletes user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "user.delete",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/user/getById": {
            "post": {
                "description": "Gets user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "user.getById",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userGetByIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/user/getByLogin": {
            "post": {
                "description": "Gets user by login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "user.getByLogin",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userGetByLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/user/group/create": {
            "post": {
                "description": "Creates user-group relations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-group"
                ],
                "operationId": "user-group.create",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userGroupInsertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/usergroup.Group"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/user/group/delete": {
            "post": {
                "description": "Deletes user-group relations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-group"
                ],
                "operationId": "user-group.delete",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userGroupDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/user/group/list": {
            "post": {
                "description": "Gets list of user-group relations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-group"
                ],
                "operationId": "user-group.list",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userGroupListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userGroupListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/user/list": {
            "post": {
                "description": "Gets list of users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "user.list",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/user/route/create": {
            "post": {
                "description": "Creates pairs of user-route relations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-route"
                ],
                "operationId": "user-route.create",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userRouteInsertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/userRouteRouteWithGroups"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/user/route/delete": {
            "post": {
                "description": "Deletes list of user-route relations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-route"
                ],
                "operationId": "user-route.delete",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userRouteDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/user/route/list": {
            "post": {
                "description": "Gets list of user-route relations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-route"
                ],
                "operationId": "user-route.list",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userRouteListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userRouteListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/user/route/update": {
            "post": {
                "description": "Updates pair of user-route relations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-route"
                ],
                "operationId": "user-route.update",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userRoutePair"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userRouteUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/v1/user/update": {
            "post": {
                "description": "Updates user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "user.update",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "group.filter": {
            "type": "object",
            "required": [
                "namespaceId",
                "page",
                "pageSize"
            ],
            "properties": {
                "namespaceId": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "pattern": {
                    "type": "string"
                }
            }
        },
        "groupDeleteRequest": {
            "type": "object",
            "required": [
                "id",
                "namespaceId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "groupGetByCodeRequest": {
            "type": "object",
            "required": [
                "code",
                "namespaceId"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "groupGetByIdRequest": {
            "type": "object",
            "required": [
                "id",
                "namespaceId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "groupGetResponse": {
            "type": "object",
            "required": [
                "code",
                "createdAt",
                "description",
                "id",
                "namespaceId",
                "updatedAt"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "groupInsertRequest": {
            "type": "object",
            "required": [
                "code",
                "description",
                "namespaceId"
            ],
            "properties": {
                "baseGroupId": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "groupListRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/group.filter"
                }
            }
        },
        "groupListResponse": {
            "type": "object",
            "required": [
                "items",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/groupGetResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "groupRouteDeleteRequest": {
            "type": "object",
            "required": [
                "pairs"
            ],
            "properties": {
                "pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/groupRoutePair"
                    }
                }
            }
        },
        "groupRouteFilter": {
            "type": "object",
            "required": [
                "groupId",
                "namespaceId",
                "page"
            ],
            "properties": {
                "belongToGroup": {
                    "type": "boolean"
                },
                "groupId": {
                    "type": "integer"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "routePattern": {
                    "type": "string"
                }
            }
        },
        "groupRouteInsertRequest": {
            "type": "object",
            "required": [
                "pairs"
            ],
            "properties": {
                "pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/groupRoutePair"
                    }
                }
            }
        },
        "groupRouteListRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/groupRouteFilter"
                }
            }
        },
        "groupRouteListResponse": {
            "type": "object",
            "required": [
                "items",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/groupRouteRoute"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "groupRoutePair": {
            "type": "object",
            "required": [
                "groupId",
                "routeId"
            ],
            "properties": {
                "groupId": {
                    "type": "integer"
                },
                "routeId": {
                    "type": "integer"
                }
            }
        },
        "groupRouteRoute": {
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "id",
                "method",
                "namespaceId",
                "route",
                "tags",
                "updatedAt"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "route": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "groupUpdateRequest": {
            "type": "object",
            "required": [
                "code",
                "description",
                "id",
                "namespaceId"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "namespaceDeleteRequest": {
            "type": "object",
            "required": [
                "namespaceId"
            ],
            "properties": {
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "namespaceGetRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer"
                }
            }
        },
        "namespaceGetResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "id",
                "name",
                "systemId",
                "updatedAt"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "namespaceInsertRequest": {
            "type": "object",
            "required": [
                "name",
                "systemId"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "systemId": {
                    "type": "integer"
                }
            }
        },
        "namespaceListRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "namespaceUpdateRequest": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "route.filter": {
            "type": "object",
            "required": [
                "namespaceId",
                "page",
                "pageSize"
            ],
            "properties": {
                "namespaceId": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "routeDeleteRequest": {
            "type": "object",
            "required": [
                "id",
                "namespaceId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "routeGetByIdRequest": {
            "type": "object",
            "required": [
                "id",
                "namespaceId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "routeGetByParamsRequest": {
            "type": "object",
            "required": [
                "method",
                "namespaceId",
                "route"
            ],
            "properties": {
                "method": {
                    "type": "string"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "route": {
                    "type": "string"
                }
            }
        },
        "routeGetResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "id",
                "method",
                "namespaceId",
                "route",
                "tags",
                "updatedAt"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "route": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "routeInsertRequest": {
            "type": "object",
            "required": [
                "description",
                "method",
                "namespaceId",
                "route"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "route": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "routeListRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/route.filter"
                }
            }
        },
        "routeListResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/routeGetResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "routeUpdateRequest": {
            "type": "object",
            "required": [
                "description",
                "id",
                "method",
                "namespaceId",
                "route"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "route": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "sysUserLoginRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "sysUserRegisterRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "systemDeleteRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "systemGetRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "systemGetResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "id",
                "name",
                "updatedAt"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "systemInsertRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "systemUpdateRequest": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "tag.filter": {
            "type": "object",
            "required": [
                "namespaceId",
                "page",
                "pageSize"
            ],
            "properties": {
                "namespaceId": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "pattern": {
                    "type": "string"
                }
            }
        },
        "tagDeleteRequest": {
            "type": "object",
            "required": [
                "id",
                "namespaceId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "tagGetRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "tagGetResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "id",
                "name",
                "namespaceId",
                "updatedAt"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "tagInsertRequest": {
            "type": "object",
            "required": [
                "name",
                "namespaceId"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "tagListRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/tag.filter"
                }
            }
        },
        "tagListResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tagGetResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "tagUpdateRequest": {
            "type": "object",
            "required": [
                "id",
                "name",
                "namespaceId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "user.filter": {
            "type": "object",
            "required": [
                "namespaceId",
                "page"
            ],
            "properties": {
                "namespaceId": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "pattern": {
                    "type": "string"
                }
            }
        },
        "user.sessionResponse": {
            "type": "object",
            "required": [
                "login"
            ],
            "properties": {
                "login": {
                    "type": "string"
                }
            }
        },
        "userCreateRequest": {
            "type": "object",
            "required": [
                "externalId",
                "namespaceId"
            ],
            "properties": {
                "externalId": {
                    "type": "string"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "userDeleteRequest": {
            "type": "object",
            "required": [
                "id",
                "namespaceId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "userGetByIdRequest": {
            "type": "object",
            "required": [
                "id",
                "namespaceId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "userGetByLoginRequest": {
            "type": "object",
            "required": [
                "login",
                "namespaceId"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "userGetResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "externalId",
                "id",
                "namespaceId",
                "updatedAt"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string",
                    "x-nullable": true
                },
                "externalId": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "userGroupDeleteRequest": {
            "type": "object",
            "required": [
                "pairs"
            ],
            "properties": {
                "pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userGroupPair"
                    }
                }
            }
        },
        "userGroupFilter": {
            "type": "object",
            "required": [
                "namespaceId",
                "page",
                "userId"
            ],
            "properties": {
                "belongToUser": {
                    "type": "boolean"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "pattern": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "userGroupInsertRequest": {
            "type": "object",
            "required": [
                "pairs"
            ],
            "properties": {
                "pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userGroupPair"
                    }
                }
            }
        },
        "userGroupListRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/userGroupFilter"
                }
            }
        },
        "userGroupListResponse": {
            "type": "object",
            "required": [
                "items",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/usergroup.Group"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "userGroupPair": {
            "type": "object",
            "required": [
                "groupId",
                "userId"
            ],
            "properties": {
                "groupId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "userListRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/user.filter"
                }
            }
        },
        "userListResponse": {
            "type": "object",
            "required": [
                "items",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userGetResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "userRouteDeleteRequest": {
            "type": "object",
            "required": [
                "pairs"
            ],
            "properties": {
                "pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userRoutePairToDelete"
                    }
                }
            }
        },
        "userRouteFilter": {
            "type": "object",
            "required": [
                "namespaceId",
                "page",
                "userId"
            ],
            "properties": {
                "belongToUser": {
                    "type": "boolean"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "pattern": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "userRouteInsertRequest": {
            "type": "object",
            "required": [
                "pairs"
            ],
            "properties": {
                "pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userRoutePair"
                    }
                }
            }
        },
        "userRouteListRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/userRouteFilter"
                }
            }
        },
        "userRouteListResponse": {
            "type": "object",
            "required": [
                "items",
                "total"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userRouteRouteWithGroups"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "userRoutePair": {
            "type": "object",
            "required": [
                "routeId",
                "userId"
            ],
            "properties": {
                "isExcluded": {
                    "type": "boolean"
                },
                "routeId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "userRoutePairToDelete": {
            "type": "object",
            "required": [
                "routeId",
                "userId"
            ],
            "properties": {
                "routeId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "userRouteRouteWithGroups": {
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "groups",
                "id",
                "isExcluded",
                "method",
                "namespaceId",
                "route",
                "tags",
                "updatedAt"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userroute.Group"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "isExcluded": {
                    "type": "boolean"
                },
                "method": {
                    "type": "string"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "route": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "userRouteUpdateResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "groups",
                "id",
                "isExcluded",
                "method",
                "namespaceId",
                "route",
                "tags",
                "updatedAt"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userroute.Group"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "isExcluded": {
                    "type": "boolean"
                },
                "method": {
                    "type": "string"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "route": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "userUpdateRequest": {
            "type": "object",
            "required": [
                "externalId",
                "id",
                "namespaceId"
            ],
            "properties": {
                "externalId": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "namespaceId": {
                    "type": "integer"
                }
            }
        },
        "usergroup.Group": {
            "type": "object",
            "required": [
                "code",
                "createdAt",
                "description",
                "id",
                "namespaceId",
                "updatedAt"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "userroute.Group": {
            "type": "object",
            "required": [
                "code",
                "createdAt",
                "description",
                "id",
                "namespaceId",
                "updatedAt"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "namespaceId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "util.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "stack": {
                    "type": "string"
                }
            }
        },
        "util.ResponseWithError": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/util.Error"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8081",
	BasePath:    "/api",
	Schemes:     []string{},
	Title:       "BZDACS",
	Description: "Access control system",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
