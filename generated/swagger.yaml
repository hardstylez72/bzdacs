basePath: /api
definitions:
  group.filter:
    properties:
      namespaceId:
        type: integer
      page:
        type: integer
      pageSize:
        type: integer
      pattern:
        type: string
    required:
    - namespaceId
    - page
    - pageSize
    type: object
  groupDeleteRequest:
    properties:
      id:
        type: integer
      namespaceId:
        type: integer
    required:
    - id
    - namespaceId
    type: object
  groupGetByCodeRequest:
    properties:
      code:
        type: string
      namespaceId:
        type: integer
    required:
    - code
    - namespaceId
    type: object
  groupGetByIdRequest:
    properties:
      id:
        type: integer
      namespaceId:
        type: integer
    required:
    - id
    - namespaceId
    type: object
  groupGetResponse:
    properties:
      code:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      description:
        type: string
      id:
        type: integer
      namespaceId:
        type: integer
      updatedAt:
        type: string
    required:
    - code
    - createdAt
    - description
    - id
    - namespaceId
    - updatedAt
    type: object
  groupInsertRequest:
    properties:
      baseGroupId:
        type: integer
      code:
        type: string
      description:
        type: string
      namespaceId:
        type: integer
    required:
    - code
    - description
    - namespaceId
    type: object
  groupListRequest:
    properties:
      filter:
        $ref: '#/definitions/group.filter'
    type: object
  groupListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/groupGetResponse'
        type: array
      total:
        type: integer
    required:
    - items
    - total
    type: object
  groupRouteDeleteRequest:
    properties:
      pairs:
        items:
          $ref: '#/definitions/groupRoutePair'
        type: array
    required:
    - pairs
    type: object
  groupRouteFilter:
    properties:
      belongToGroup:
        type: boolean
      groupId:
        type: integer
      namespaceId:
        type: integer
      page:
        type: integer
      pageSize:
        type: integer
      routePattern:
        type: string
    required:
    - groupId
    - namespaceId
    - page
    type: object
  groupRouteInsertRequest:
    properties:
      pairs:
        items:
          $ref: '#/definitions/groupRoutePair'
        type: array
    required:
    - pairs
    type: object
  groupRouteListRequest:
    properties:
      filter:
        $ref: '#/definitions/groupRouteFilter'
    type: object
  groupRouteListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/groupRouteRoute'
        type: array
      total:
        type: integer
    required:
    - items
    - total
    type: object
  groupRoutePair:
    properties:
      groupId:
        type: integer
      routeId:
        type: integer
    required:
    - groupId
    - routeId
    type: object
  groupRouteRoute:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      description:
        type: string
      id:
        type: integer
      method:
        type: string
      namespaceId:
        type: integer
      route:
        type: string
      tags:
        items:
          type: string
        type: array
      updatedAt:
        type: string
    required:
    - createdAt
    - description
    - id
    - method
    - namespaceId
    - route
    - tags
    - updatedAt
    type: object
  groupUpdateRequest:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      namespaceId:
        type: integer
    required:
    - code
    - description
    - id
    - namespaceId
    type: object
  namespaceDeleteRequest:
    properties:
      namespaceId:
        type: integer
    required:
    - namespaceId
    type: object
  namespaceGetRequest:
    properties:
      id:
        type: integer
      name:
        type: string
      systemId:
        type: integer
    type: object
  namespaceGetResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      id:
        type: integer
      name:
        type: string
      systemId:
        type: integer
      updatedAt:
        type: string
    required:
    - createdAt
    - id
    - name
    - systemId
    - updatedAt
    type: object
  namespaceInsertRequest:
    properties:
      name:
        type: string
      systemId:
        type: integer
    required:
    - name
    - systemId
    type: object
  namespaceListRequest:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  namespaceUpdateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  route.filter:
    properties:
      namespaceId:
        type: integer
      page:
        type: integer
      pageSize:
        type: integer
    required:
    - namespaceId
    - page
    - pageSize
    type: object
  routeDeleteRequest:
    properties:
      id:
        type: integer
      namespaceId:
        type: integer
    required:
    - id
    - namespaceId
    type: object
  routeGetByIdRequest:
    properties:
      id:
        type: integer
      namespaceId:
        type: integer
    required:
    - id
    - namespaceId
    type: object
  routeGetByParamsRequest:
    properties:
      method:
        type: string
      namespaceId:
        type: integer
      route:
        type: string
    required:
    - method
    - namespaceId
    - route
    type: object
  routeGetResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      description:
        type: string
      id:
        type: integer
      method:
        type: string
      namespaceId:
        type: integer
      route:
        type: string
      tags:
        items:
          type: string
        type: array
      updatedAt:
        type: string
    required:
    - createdAt
    - description
    - id
    - method
    - namespaceId
    - route
    - tags
    - updatedAt
    type: object
  routeInsertRequest:
    properties:
      description:
        type: string
      method:
        type: string
      namespaceId:
        type: integer
      route:
        type: string
      tags:
        items:
          type: string
        type: array
    required:
    - description
    - method
    - namespaceId
    - route
    type: object
  routeListRequest:
    properties:
      filter:
        $ref: '#/definitions/route.filter'
    type: object
  routeListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/routeGetResponse'
        type: array
      total:
        type: integer
    type: object
  routeUpdateRequest:
    properties:
      description:
        type: string
      id:
        type: integer
      method:
        type: string
      namespaceId:
        type: integer
      route:
        type: string
      tags:
        items:
          type: string
        type: array
    required:
    - description
    - id
    - method
    - namespaceId
    - route
    type: object
  sysUserLoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  sysUserRegisterRequest:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  systemDeleteRequest:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  systemGetRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  systemGetResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    required:
    - createdAt
    - id
    - name
    - updatedAt
    type: object
  systemInsertRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  systemUpdateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  tag.filter:
    properties:
      namespaceId:
        type: integer
      page:
        type: integer
      pageSize:
        type: integer
      pattern:
        type: string
    required:
    - namespaceId
    - page
    - pageSize
    type: object
  tagDeleteRequest:
    properties:
      id:
        type: integer
      namespaceId:
        type: integer
    required:
    - id
    - namespaceId
    type: object
  tagGetRequest:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  tagGetResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      id:
        type: integer
      name:
        type: string
      namespaceId:
        type: integer
      updatedAt:
        type: string
    required:
    - createdAt
    - id
    - name
    - namespaceId
    - updatedAt
    type: object
  tagInsertRequest:
    properties:
      name:
        type: string
      namespaceId:
        type: integer
    required:
    - name
    - namespaceId
    type: object
  tagListRequest:
    properties:
      filter:
        $ref: '#/definitions/tag.filter'
    type: object
  tagListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/tagGetResponse'
        type: array
      total:
        type: integer
    type: object
  tagUpdateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
      namespaceId:
        type: integer
    required:
    - id
    - name
    - namespaceId
    type: object
  user.filter:
    properties:
      namespaceId:
        type: integer
      page:
        type: integer
      pageSize:
        type: integer
      pattern:
        type: string
    required:
    - namespaceId
    - page
    type: object
  user.sessionResponse:
    properties:
      login:
        type: string
    type: object
  userCreateRequest:
    properties:
      externalId:
        type: string
      namespaceId:
        type: integer
    required:
    - externalId
    - namespaceId
    type: object
  userDeleteRequest:
    properties:
      id:
        type: integer
      namespaceId:
        type: integer
    required:
    - id
    - namespaceId
    type: object
  userGetByIdRequest:
    properties:
      id:
        type: integer
      namespaceId:
        type: integer
    required:
    - id
    - namespaceId
    type: object
  userGetByLoginRequest:
    properties:
      login:
        type: string
      namespaceId:
        type: integer
    required:
    - login
    - namespaceId
    type: object
  userGetResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      externalId:
        type: string
      id:
        type: integer
      namespaceId:
        type: integer
      updatedAt:
        type: string
    required:
    - createdAt
    - externalId
    - id
    - namespaceId
    - updatedAt
    type: object
  userGroupDeleteRequest:
    properties:
      pairs:
        items:
          $ref: '#/definitions/userGroupPair'
        type: array
    required:
    - pairs
    type: object
  userGroupFilter:
    properties:
      belongToUser:
        type: boolean
      namespaceId:
        type: integer
      page:
        type: integer
      pageSize:
        type: integer
      pattern:
        type: string
      userId:
        type: integer
    required:
    - namespaceId
    - page
    - userId
    type: object
  userGroupInsertRequest:
    properties:
      pairs:
        items:
          $ref: '#/definitions/userGroupPair'
        type: array
    required:
    - pairs
    type: object
  userGroupListRequest:
    properties:
      filter:
        $ref: '#/definitions/userGroupFilter'
    type: object
  userGroupListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/usergroup.Group'
        type: array
      total:
        type: integer
    required:
    - items
    - total
    type: object
  userGroupPair:
    properties:
      groupId:
        type: integer
      userId:
        type: integer
    required:
    - groupId
    - userId
    type: object
  userListRequest:
    properties:
      filter:
        $ref: '#/definitions/user.filter'
    type: object
  userListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/userGetResponse'
        type: array
      total:
        type: integer
    required:
    - items
    - total
    type: object
  userRouteDeleteRequest:
    properties:
      pairs:
        items:
          $ref: '#/definitions/userRoutePairToDelete'
        type: array
    required:
    - pairs
    type: object
  userRouteFilter:
    properties:
      belongToUser:
        type: boolean
      namespaceId:
        type: integer
      page:
        type: integer
      pageSize:
        type: integer
      pattern:
        type: string
      userId:
        type: integer
    required:
    - namespaceId
    - page
    - userId
    type: object
  userRouteInsertRequest:
    properties:
      pairs:
        items:
          $ref: '#/definitions/userRoutePair'
        type: array
    required:
    - pairs
    type: object
  userRouteListRequest:
    properties:
      filter:
        $ref: '#/definitions/userRouteFilter'
    type: object
  userRouteListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/userRouteRouteWithGroups'
        type: array
      total:
        type: integer
    required:
    - items
    - total
    type: object
  userRoutePair:
    properties:
      isExcluded:
        type: boolean
      routeId:
        type: integer
      userId:
        type: integer
    required:
    - routeId
    - userId
    type: object
  userRoutePairToDelete:
    properties:
      routeId:
        type: integer
      userId:
        type: integer
    required:
    - routeId
    - userId
    type: object
  userRouteRoute:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      description:
        type: string
      id:
        type: integer
      isExcluded:
        type: boolean
      method:
        type: string
      namespaceId:
        type: integer
      route:
        type: string
      tags:
        items:
          type: string
        type: array
      updatedAt:
        type: string
    required:
    - createdAt
    - description
    - id
    - isExcluded
    - method
    - namespaceId
    - route
    - tags
    - updatedAt
    type: object
  userRouteRouteWithGroups:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      description:
        type: string
      groups:
        items:
          $ref: '#/definitions/userroute.Group'
        type: array
      id:
        type: integer
      isExcluded:
        type: boolean
      method:
        type: string
      namespaceId:
        type: integer
      route:
        type: string
      tags:
        items:
          type: string
        type: array
      updatedAt:
        type: string
    required:
    - createdAt
    - description
    - groups
    - id
    - isExcluded
    - method
    - namespaceId
    - route
    - tags
    - updatedAt
    type: object
  userRouteUpdateResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      description:
        type: string
      id:
        type: integer
      isExcluded:
        type: boolean
      method:
        type: string
      namespaceId:
        type: integer
      route:
        type: string
      tags:
        items:
          type: string
        type: array
      updatedAt:
        type: string
    required:
    - createdAt
    - description
    - id
    - isExcluded
    - method
    - namespaceId
    - route
    - tags
    - updatedAt
    type: object
  userUpdateRequest:
    properties:
      externalId:
        type: string
      id:
        type: integer
      namespaceId:
        type: integer
    required:
    - externalId
    - id
    - namespaceId
    type: object
  usergroup.Group:
    properties:
      code:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      description:
        type: string
      id:
        type: integer
      namespaceId:
        type: integer
      updatedAt:
        type: string
    required:
    - code
    - createdAt
    - description
    - id
    - namespaceId
    - updatedAt
    type: object
  userroute.Group:
    properties:
      code:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
        x-nullable: true
      description:
        type: string
      id:
        type: integer
      namespaceId:
        type: integer
      updatedAt:
        type: string
    required:
    - code
    - createdAt
    - description
    - id
    - namespaceId
    - updatedAt
    type: object
  util.Error:
    properties:
      code:
        type: string
      message:
        type: string
      stack:
        type: string
    type: object
  util.ResponseWithError:
    properties:
      error:
        $ref: '#/definitions/util.Error'
    type: object
host: localhost:8081
info:
  contact:
    name: Sergey Korotkov
  description: Access control system
  title: BZDACS
  version: "1.0"
paths:
  /v1/group/create:
    post:
      consumes:
      - application/json
      description: Creates group
      operationId: group.create
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/groupInsertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groupGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - group
  /v1/group/delete:
    post:
      consumes:
      - application/json
      description: Deletes group
      operationId: group.delete
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/groupDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - group
  /v1/group/getByCode:
    post:
      consumes:
      - application/json
      description: Gets group by code
      operationId: group.getByCode
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/groupGetByCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groupGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - group
  /v1/group/getById:
    post:
      consumes:
      - application/json
      description: Gets group by id
      operationId: group.getById
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/groupGetByIdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groupGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - group
  /v1/group/list:
    post:
      consumes:
      - application/json
      description: List groups
      operationId: group.list
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/groupListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groupListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - group
  /v1/group/route/create:
    post:
      consumes:
      - application/json
      description: Creates group-routes relations
      operationId: group-routes.create
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/groupRouteInsertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/groupRouteRoute'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - group-route
  /v1/group/route/delete:
    post:
      consumes:
      - application/json
      description: Deletes group-routes relations
      operationId: group-routes.delete
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/groupRouteDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - group-route
  /v1/group/route/list:
    post:
      consumes:
      - application/json
      description: Gets list of group-routes relations
      operationId: group-routes.list
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/groupRouteListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groupRouteListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - group-route
  /v1/group/update:
    post:
      consumes:
      - application/json
      description: Updates group
      operationId: group.update
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/groupUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groupGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - group
  /v1/namespace/create:
    post:
      consumes:
      - application/json
      description: Creates namespace
      operationId: namespace.create
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/namespaceInsertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/namespaceGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - namespace
  /v1/namespace/delete:
    post:
      consumes:
      - application/json
      description: Deletes selected namespace
      operationId: namespace.delete
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/namespaceDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - namespace
  /v1/namespace/get:
    post:
      consumes:
      - application/json
      description: Gets namespace with specified params
      operationId: namespace.get
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/namespaceGetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/namespaceGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - namespace
  /v1/namespace/list:
    post:
      consumes:
      - application/json
      description: List of namespaces belong to selected system
      operationId: namespace.list
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/namespaceListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/namespaceGetResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - namespace
  /v1/namespace/update:
    post:
      consumes:
      - application/json
      description: Updates namespace
      operationId: namespace.update
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/namespaceUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/namespaceGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - namespace
  /v1/route/create:
    post:
      consumes:
      - application/json
      description: Creates route
      operationId: route.create
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/routeInsertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routeGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - route
  /v1/route/delete:
    post:
      consumes:
      - application/json
      description: Deletes route
      operationId: route.delete
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/routeDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - route
  /v1/route/getById:
    post:
      consumes:
      - application/json
      description: Gets route by id
      operationId: route.getById
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/routeGetByIdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routeGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - route
  /v1/route/getByParams:
    post:
      consumes:
      - application/json
      description: Gets route by params
      operationId: route.getByParams
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/routeGetByParamsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routeGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - route
  /v1/route/list:
    post:
      consumes:
      - application/json
      description: Gets list of routes
      operationId: route.list
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/routeListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routeListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - route
  /v1/route/update:
    post:
      consumes:
      - application/json
      description: Updates route
      operationId: route.update
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/routeUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routeGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - route
  /v1/sys-user/login:
    post:
      consumes:
      - application/json
      description: Login sys-user
      operationId: sys-user.login
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/sysUserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - sys-user
  /v1/sys-user/logout:
    post:
      consumes:
      - application/json
      description: Logout sys-user
      operationId: sys-user.logout
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - sys-user
  /v1/sys-user/register:
    post:
      consumes:
      - application/json
      description: Creates sys-user
      operationId: sys-user.register
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/sysUserRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - sys-user
  /v1/sys-user/session:
    post:
      consumes:
      - application/json
      description: Gets sys-user session
      operationId: sys-user.session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.sessionResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - sys-user
  /v1/system/create:
    post:
      consumes:
      - application/json
      description: Creates system
      operationId: system.create
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/systemInsertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/systemGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - system
  /v1/system/delete:
    post:
      consumes:
      - application/json
      description: Deletes system by id
      operationId: system.delete
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/systemDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - system
  /v1/system/get:
    post:
      consumes:
      - application/json
      description: Gets system by multiple params
      operationId: system.get
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/systemGetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/systemGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - system
  /v1/system/list:
    post:
      consumes:
      - application/json
      description: Gets system list
      operationId: system.list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/systemGetResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - system
  /v1/system/update:
    post:
      consumes:
      - application/json
      description: Updates system
      operationId: system.update
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/systemUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/systemGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - system
  /v1/tag/create:
    post:
      consumes:
      - application/json
      description: Creates tag
      operationId: tag.create
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/tagInsertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tagGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - tag
  /v1/tag/delete:
    post:
      consumes:
      - application/json
      description: Deletes tag
      operationId: tag.delete
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/tagDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - tag
  /v1/tag/get:
    post:
      consumes:
      - application/json
      description: Gets tag
      operationId: tag.get
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/tagGetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tagGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - tag
  /v1/tag/list:
    post:
      consumes:
      - application/json
      description: List tags
      operationId: tag.list
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/tagListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tagListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - tag
  /v1/tag/update:
    post:
      consumes:
      - application/json
      description: Updates tag
      operationId: tag.update
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/tagUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tagGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - tag
  /v1/user/create:
    post:
      consumes:
      - application/json
      description: Creates user
      operationId: user.create
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/userCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - user
  /v1/user/delete:
    post:
      consumes:
      - application/json
      description: Deletes user by id
      operationId: user.delete
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/userDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - user
  /v1/user/getById:
    post:
      consumes:
      - application/json
      description: Gets user by id
      operationId: user.getById
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/userGetByIdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - user
  /v1/user/getByLogin:
    post:
      consumes:
      - application/json
      description: Gets user by login
      operationId: user.getByLogin
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/userGetByLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - user
  /v1/user/group/create:
    post:
      consumes:
      - application/json
      description: Creates user-group relations
      operationId: user-group.create
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/userGroupInsertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/usergroup.Group'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - user-group
  /v1/user/group/delete:
    post:
      consumes:
      - application/json
      description: Deletes user-group relations
      operationId: user-group.delete
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/userGroupDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - user-group
  /v1/user/group/list:
    post:
      consumes:
      - application/json
      description: Gets list of user-group relations
      operationId: user-group.list
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/userGroupListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userGroupListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - user-group
  /v1/user/list:
    post:
      consumes:
      - application/json
      description: Gets list of users
      operationId: user.list
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/userListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - user
  /v1/user/route/create:
    post:
      consumes:
      - application/json
      description: Creates pairs of user-route relations
      operationId: user-route.create
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/userRouteInsertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/userRouteRoute'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - user-route
  /v1/user/route/delete:
    post:
      consumes:
      - application/json
      description: Deletes list of user-route relations
      operationId: user-route.delete
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/userRouteDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - user-route
  /v1/user/route/list:
    post:
      consumes:
      - application/json
      description: Gets list of user-route relations
      operationId: user-route.list
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/userRouteListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userRouteListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - user-route
  /v1/user/route/update:
    post:
      consumes:
      - application/json
      description: Updates pair of user-route relations
      operationId: user-route.update
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/userRoutePair'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userRouteUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - user-route
  /v1/user/update:
    post:
      consumes:
      - application/json
      description: Updates user
      operationId: user.update
      parameters:
      - description: request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/userUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ResponseWithError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ResponseWithError'
      tags:
      - user
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
